@import 'compass';
@import '../vendors/rem';
@import 'variables';
@import 'functions';
//-------------------------------------------------------
// CROSS-BROWSER MIXINS
//-------------------------------------------------------
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
//-------------------------------------------------------
// TRANSITION MIXINS
//-------------------------------------------------------
@mixin transition($args...) {
	-webkit-transition: $args;
	-moz-transition: $args;
	-ms-transition: $args;
	-o-transition: $args;
	transition: $args;
}
//-------------------------------------------------------
// ANIMATION & KEYFRAME MIXINS
//-------------------------------------------------------
@mixin keyframes($name) {
	@-webkit-keyframes #{$name} {
		@content;
	}
	// @-moz-keyframes #{$name} {
	// 	@content;
	// }
	// @-ms-keyframes #{$name} {
	// 	@content;
	// }
	// @-o-keyframes #{$name} {
	// 	@content;
	// }
	@keyframes #{$name} {
		@content;
	}
}
@mixin prefix($prop, $str) {
	-webkit-#{$prop}: #{$str};
	-moz-#{$prop}: #{$str};
	-ms-#{$prop}: #{$str};
	-o-#{$prop}: #{$str};
	#{$prop}: #{$str};
}
//-------------------------------------------------------
// BUTTON MIXINS
//-------------------------------------------------------
@mixin button-core($btn-color, $btn-size: 2rem, $color: #fff, $radius: 3px){
	@include rem(font-size, $btn-size);
	@include rem(padding, 1rem 2rem);
	@include rem(margin, 1rem);
	@include transition(.3s);
	border-radius: $radius;
	font-family: $font-body;
	color: $btn-color-text;
	background: $btn-color;
	text-decoration: none;
	outline: none;
	border: none;
	cursor: pointer;
}

// @mixin button($btn-color, $outline: false, $scale: false, $shadow: false) {
// 	@if $outline {
// 		&:hover {
// 			@include button-fx-outline($btn-color);
// 		}
// 	}
// 	@if $scale {
// 		&:hover {
// 			@include prefix(animation, btnFxScale .5s);
// 		}
// 	}
// 	@if $shadow {
// 		@include button-3d($btn-color);
// 	}
// }

// Outline Button
@mixin button-fx-outline($color) {
	box-shadow: 0 0 0 2px $color-bg, 0 0 0 4px $color;	
}
// Scale Button
@include keyframes(btnFxScale) {
	from, to {
		-webkit-transform: scale(1, 1);
		transform: scale(1, 1);
	}
	25% {
		-webkit-transform: scale(.9, 1.1);
		transform: scale(.9, 1.1);
	}
	50% {
		-webkit-transform: scale(1.1, .9);
		transform: scale(1.1, .9);
	}
	75% {
		-webkit-transform: scale(.95, 1.05);
		transform: scale(.95, 1.05);
	}
}
// 3D Button
@mixin button-3d($color) {
	$shadow: darken($color, 10%);
	$shadow-layer: lighten($color, 25%);
	box-shadow: 0 ($btn-size * 0.25) 0 $shadow,
				0 ($btn-size * 0.35) 0 ($btn-size * 0.2) $shadow-layer;
	&:hover {
		background: darken($color, 5%);
	}
	&:active {
		@include prefix(transform, translateY($btn-size * 0.25));
		box-shadow: 0 0 0 ($btn-size * 0.35) $shadow-layer;
	}
}

//-------------------------------------------------------
// CENTER VERTICALLY AND/OR HORIZONTALLY AN ABSOLUTE POSITIONED ELEMENT
//-------------------------------------------------------
@mixin centerAbs($xy:xy){
	@if $xy == xy {
		left: 50%;
		top: 50%;
		bottom: auto;
		right: auto;
		@include prefix(transform, translateX(-50%) translateY(-50%));
	}
	@else if $xy == x {
		left: 50%;
		right: auto;
		@include prefix(transform, translateX(-50%));
	}
	@else if $xy == y {
		top: 50%;
		bottom: auto;
		@include prefix(transform, translateY(-50%));
	}
}
